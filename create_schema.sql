-- MySQL Script generated by MySQL Workbench
-- 11/08/15 21:04:51
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='';

-- -----------------------------------------------------
-- Schema project
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `project` ;

-- -----------------------------------------------------
-- Schema project
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `project` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `project` ;

-- -----------------------------------------------------
-- Table `project`.`publisher`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `project`.`publisher` ;

CREATE TABLE IF NOT EXISTS `project`.`publisher` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `name` VARCHAR(255) NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `project`.`book`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `project`.`book` ;

CREATE TABLE IF NOT EXISTS `project`.`book` (
  `ISBN` VARCHAR(13) NULL COMMENT '',
  `title` VARCHAR(255) NOT NULL COMMENT '',
  `edition` VARCHAR(45) NULL COMMENT '',
  `publish_year` YEAR NOT NULL COMMENT '',
  `publisher_id` INT NULL COMMENT '',
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  CONSTRAINT `publisher_fk`
    FOREIGN KEY (`publisher_id`)
    REFERENCES `project`.`publisher` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `publisher_fk_idx` ON `project`.`book` (`publisher_id` ASC)  COMMENT '';

CREATE UNIQUE INDEX `ISBN_UNIQUE` ON `project`.`book` (`ISBN` ASC)  COMMENT '';


-- -----------------------------------------------------
-- Table `project`.`author`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `project`.`author` ;

CREATE TABLE IF NOT EXISTS `project`.`author` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `name` VARCHAR(255) NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `project`.`language`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `project`.`language` ;

CREATE TABLE IF NOT EXISTS `project`.`language` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `name` VARCHAR(45) NOT NULL COMMENT '',
  `abbr` VARCHAR(2) NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `project`.`written_in`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `project`.`written_in` ;

CREATE TABLE IF NOT EXISTS `project`.`written_in` (
  `book_id` INT NOT NULL COMMENT '',
  `language_id` INT NOT NULL COMMENT '',
  CONSTRAINT `book_fk_lan`
    FOREIGN KEY (`book_id`)
    REFERENCES `project`.`book` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `language_fk`
    FOREIGN KEY (`language_id`)
    REFERENCES `project`.`language` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `book_fk_idx` ON `project`.`written_in` (`book_id` ASC)  COMMENT '';

CREATE INDEX `language_fk_idx` ON `project`.`written_in` (`language_id` ASC)  COMMENT '';


-- -----------------------------------------------------
-- Table `project`.`writes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `project`.`writes` ;

CREATE TABLE IF NOT EXISTS `project`.`writes` (
  `author_id` INT NOT NULL COMMENT '',
  `book_id` INT NOT NULL COMMENT '',
  CONSTRAINT `author_fk`
    FOREIGN KEY (`author_id`)
    REFERENCES `project`.`author` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `book_fk_wrt`
    FOREIGN KEY (`book_id`)
    REFERENCES `project`.`book` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `author_fk_idx` ON `project`.`writes` (`author_id` ASC)  COMMENT '';

CREATE INDEX `book_fk_idx` ON `project`.`writes` (`book_id` ASC)  COMMENT '';


-- -----------------------------------------------------
-- Table `project`.`format`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `project`.`format` ;

CREATE TABLE IF NOT EXISTS `project`.`format` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `name` VARCHAR(45) NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `project`.`has_format`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `project`.`has_format` ;

CREATE TABLE IF NOT EXISTS `project`.`has_format` (
  `book_id` INT NOT NULL COMMENT '',
  `format_id` INT NOT NULL COMMENT '',
  CONSTRAINT `book_fk_fmt`
    FOREIGN KEY (`book_id`)
    REFERENCES `project`.`book` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `format_fk`
    FOREIGN KEY (`format_id`)
    REFERENCES `project`.`format` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `book_fk_idx` ON `project`.`has_format` (`book_id` ASC)  COMMENT '';

CREATE INDEX `format_fk_idx` ON `project`.`has_format` (`format_id` ASC)  COMMENT '';


-- -----------------------------------------------------
-- Table `project`.`customer_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `project`.`customer_type` ;

CREATE TABLE IF NOT EXISTS `project`.`customer_type` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `name` VARCHAR(45) NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `project`.`customer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `project`.`customer` ;

CREATE TABLE IF NOT EXISTS `project`.`customer` (
  `id` INT NOT NULL COMMENT '',
  `name` VARCHAR(255) NOT NULL COMMENT '',
  `address` TEXT NULL COMMENT '',
  `type` INT NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  CONSTRAINT `type_fk`
    FOREIGN KEY (`type`)
    REFERENCES `project`.`customer_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `type_fk_idx` ON `project`.`customer` (`type` ASC)  COMMENT '';


-- -----------------------------------------------------
-- Table `project`.`home_customer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `project`.`home_customer` ;

CREATE TABLE IF NOT EXISTS `project`.`home_customer` (
  `customer_id` INT NOT NULL COMMENT '',
  `age` INT NULL COMMENT '',
  `gender` VARCHAR(45) NULL COMMENT '',
  `birth_date` DATE NULL COMMENT '',
  PRIMARY KEY (`customer_id`)  COMMENT '',
  CONSTRAINT `customer_fk_home`
    FOREIGN KEY (`customer_id`)
    REFERENCES `project`.`customer` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `project`.`business_customer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `project`.`business_customer` ;

CREATE TABLE IF NOT EXISTS `project`.`business_customer` (
  `customer_id` INT NOT NULL COMMENT '',
  `category` VARCHAR(45) NOT NULL COMMENT '',
  PRIMARY KEY (`customer_id`)  COMMENT '',
  CONSTRAINT `customer_fk`
    FOREIGN KEY (`customer_id`)
    REFERENCES `project`.`customer` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `project`.`region manager`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `project`.`region manager` ;

CREATE TABLE IF NOT EXISTS `project`.`region manager` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `name` VARCHAR(45) NOT NULL COMMENT '',
  `address` TEXT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `project`.`region`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `project`.`region` ;

CREATE TABLE IF NOT EXISTS `project`.`region` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `name` VARCHAR(45) NOT NULL COMMENT '',
  `manager` INT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  CONSTRAINT `manager_fk`
    FOREIGN KEY (`manager`)
    REFERENCES `project`.`region manager` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `manager_fk_idx` ON `project`.`region` (`manager` ASC)  COMMENT '';


-- -----------------------------------------------------
-- Table `project`.`seller`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `project`.`seller` ;

CREATE TABLE IF NOT EXISTS `project`.`seller` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `name` VARCHAR(45) NOT NULL COMMENT '',
  `address` TEXT NULL COMMENT '',
  `region_id` INT NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  CONSTRAINT `region_fk`
    FOREIGN KEY (`region_id`)
    REFERENCES `project`.`region` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `region_fk_idx` ON `project`.`seller` (`region_id` ASC)  COMMENT '';


-- -----------------------------------------------------
-- Table `project`.`sells`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `project`.`sells` ;

CREATE TABLE IF NOT EXISTS `project`.`sells` (
  `seller_id` INT NOT NULL COMMENT '',
  `book_id` INT NOT NULL COMMENT '',
  `price` DECIMAL(10,2) UNSIGNED NOT NULL COMMENT '',
  `quantity` INT UNSIGNED NOT NULL DEFAULT 0 COMMENT '',
  CONSTRAINT `seller_fk_sel`
    FOREIGN KEY (`seller_id`)
    REFERENCES `project`.`seller` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `book_fk_sells`
    FOREIGN KEY (`book_id`)
    REFERENCES `project`.`book` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `seller_fk_idx` ON `project`.`sells` (`seller_id` ASC)  COMMENT '';

CREATE INDEX `book_fk_idx` ON `project`.`sells` (`book_id` ASC)  COMMENT '';


-- -----------------------------------------------------
-- Table `project`.`book_category`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `project`.`book_category` ;

CREATE TABLE IF NOT EXISTS `project`.`book_category` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `name` VARCHAR(255) NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `project`.`has_category`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `project`.`has_category` ;

CREATE TABLE IF NOT EXISTS `project`.`has_category` (
  `book_id` INT NOT NULL COMMENT '',
  `category_id` INT NOT NULL COMMENT '',
  CONSTRAINT `book_id_fk_cat`
    FOREIGN KEY (`book_id`)
    REFERENCES `project`.`book` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `categor_fk`
    FOREIGN KEY (`category_id`)
    REFERENCES `project`.`book_category` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `categor_fk_idx` ON `project`.`has_category` (`category_id` ASC)  COMMENT '';

CREATE INDEX `book_fk_idx` ON `project`.`has_category` (`book_id` ASC)  COMMENT '';


-- -----------------------------------------------------
-- Table `project`.`rates`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `project`.`rates` ;

CREATE TABLE IF NOT EXISTS `project`.`rates` (
  `customer_id` INT NOT NULL COMMENT '',
  `book_id` INT NOT NULL COMMENT '',
  `rate` TINYINT UNSIGNED NOT NULL COMMENT '',
  CONSTRAINT `customer_fk_rate`
    FOREIGN KEY (`customer_id`)
    REFERENCES `project`.`customer` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `book_fk_rate`
    FOREIGN KEY (`book_id`)
    REFERENCES `project`.`book` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `customer_fk_idx` ON `project`.`rates` (`customer_id` ASC)  COMMENT '';

CREATE INDEX `book_fk_idx` ON `project`.`rates` (`book_id` ASC)  COMMENT '';


-- -----------------------------------------------------
-- Table `project`.`transaction`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `project`.`transaction` ;

CREATE TABLE IF NOT EXISTS `project`.`transaction` (
  `order_number` INT NOT NULL COMMENT '',
  `timestamp` TIMESTAMP NOT NULL COMMENT '',
  `total` DECIMAL(10,2) UNSIGNED NOT NULL COMMENT '',
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB;

CREATE UNIQUE INDEX `order_number_UNIQUE` ON `project`.`transaction` (`order_number` ASC)  COMMENT '';


-- -----------------------------------------------------
-- Table `project`.`order`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `project`.`order` ;

CREATE TABLE IF NOT EXISTS `project`.`order` (
  `order_number` INT NOT NULL COMMENT '',
  `customer_id` INT NOT NULL COMMENT '',
  `book_id` INT NOT NULL COMMENT '',
  `quantity` INT NOT NULL COMMENT '',
  `seller_id` INT NOT NULL COMMENT '',
  CONSTRAINT `customer_fk_ord`
    FOREIGN KEY (`customer_id`)
    REFERENCES `project`.`customer` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `book_fk_ord`
    FOREIGN KEY (`book_id`)
    REFERENCES `project`.`book` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `seller_fk_ord`
    FOREIGN KEY (`seller_id`)
    REFERENCES `project`.`seller` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `customer_fk_idx` ON `project`.`order` (`customer_id` ASC)  COMMENT '';

CREATE INDEX `book_id_idx` ON `project`.`order` (`book_id` ASC)  COMMENT '';

CREATE INDEX `seller_fk_idx` ON `project`.`order` (`seller_id` ASC)  COMMENT '';


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `project`.`publisher`
-- -----------------------------------------------------
START TRANSACTION;
USE `project`;
INSERT INTO `project`.`publisher` (`id`, `name`) VALUES (1, 'publisher1');

COMMIT;


-- -----------------------------------------------------
-- Data for table `project`.`book`
-- -----------------------------------------------------
START TRANSACTION;
USE `project`;
INSERT INTO `project`.`book` (`ISBN`, `title`, `edition`, `publish_year`, `publisher_id`, `id`) VALUES ('1234567890', 'book1', '1', 2000, 1, 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `project`.`author`
-- -----------------------------------------------------
START TRANSACTION;
USE `project`;
INSERT INTO `project`.`author` (`id`, `name`) VALUES (1, 'auth1');

COMMIT;


-- -----------------------------------------------------
-- Data for table `project`.`language`
-- -----------------------------------------------------
START TRANSACTION;
USE `project`;
INSERT INTO `project`.`language` (`id`, `name`, `abbr`) VALUES (1, 'English', 'EN');

COMMIT;


-- -----------------------------------------------------
-- Data for table `project`.`written_in`
-- -----------------------------------------------------
START TRANSACTION;
USE `project`;
INSERT INTO `project`.`written_in` (`book_id`, `language_id`) VALUES (1, 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `project`.`writes`
-- -----------------------------------------------------
START TRANSACTION;
USE `project`;
INSERT INTO `project`.`writes` (`author_id`, `book_id`) VALUES (1, 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `project`.`format`
-- -----------------------------------------------------
START TRANSACTION;
USE `project`;
INSERT INTO `project`.`format` (`id`, `name`) VALUES (1, 'format1');

COMMIT;


-- -----------------------------------------------------
-- Data for table `project`.`has_format`
-- -----------------------------------------------------
START TRANSACTION;
USE `project`;
INSERT INTO `project`.`has_format` (`book_id`, `format_id`) VALUES (1, 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `project`.`customer_type`
-- -----------------------------------------------------
START TRANSACTION;
USE `project`;
INSERT INTO `project`.`customer_type` (`id`, `name`) VALUES (1, 'home');
INSERT INTO `project`.`customer_type` (`id`, `name`) VALUES (2, 'business');

COMMIT;


-- -----------------------------------------------------
-- Data for table `project`.`customer`
-- -----------------------------------------------------
START TRANSACTION;
USE `project`;
INSERT INTO `project`.`customer` (`id`, `name`, `address`, `type`) VALUES (1, 'cust_home1', NULL, 1);
INSERT INTO `project`.`customer` (`id`, `name`, `address`, `type`) VALUES (2, 'cust_buiss1', NULL, 2);

COMMIT;


-- -----------------------------------------------------
-- Data for table `project`.`home_customer`
-- -----------------------------------------------------
START TRANSACTION;
USE `project`;
INSERT INTO `project`.`home_customer` (`customer_id`, `age`, `gender`, `birth_date`) VALUES (1, 20, 'male', NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `project`.`business_customer`
-- -----------------------------------------------------
START TRANSACTION;
USE `project`;
INSERT INTO `project`.`business_customer` (`customer_id`, `category`) VALUES (2, 'category1');

COMMIT;


-- -----------------------------------------------------
-- Data for table `project`.`region manager`
-- -----------------------------------------------------
START TRANSACTION;
USE `project`;
INSERT INTO `project`.`region manager` (`id`, `name`, `address`) VALUES (1, 'manager1', NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `project`.`region`
-- -----------------------------------------------------
START TRANSACTION;
USE `project`;
INSERT INTO `project`.`region` (`id`, `name`, `manager`) VALUES (1, 'region1', 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `project`.`seller`
-- -----------------------------------------------------
START TRANSACTION;
USE `project`;
INSERT INTO `project`.`seller` (`id`, `name`, `address`, `region_id`) VALUES (1, 'seller1', NULL, 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `project`.`sells`
-- -----------------------------------------------------
START TRANSACTION;
USE `project`;
INSERT INTO `project`.`sells` (`seller_id`, `book_id`, `price`, `quantity`) VALUES (1, 1, 30.25, 250);

COMMIT;


-- -----------------------------------------------------
-- Data for table `project`.`book_category`
-- -----------------------------------------------------
START TRANSACTION;
USE `project`;
INSERT INTO `project`.`book_category` (`id`, `name`) VALUES (1, 'category1');

COMMIT;


-- -----------------------------------------------------
-- Data for table `project`.`has_category`
-- -----------------------------------------------------
START TRANSACTION;
USE `project`;
INSERT INTO `project`.`has_category` (`book_id`, `category_id`) VALUES (1, 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `project`.`rates`
-- -----------------------------------------------------
START TRANSACTION;
USE `project`;
INSERT INTO `project`.`rates` (`customer_id`, `book_id`, `rate`) VALUES (1, 1, 5);

COMMIT;


-- -----------------------------------------------------
-- Data for table `project`.`transaction`
-- -----------------------------------------------------
START TRANSACTION;
USE `project`;
INSERT INTO `project`.`transaction` (`order_number`, `timestamp`, `total`, `id`) VALUES (123, 'current_timestamp', 60.50, 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `project`.`order`
-- -----------------------------------------------------
START TRANSACTION;
USE `project`;
INSERT INTO `project`.`order` (`order_number`, `customer_id`, `book_id`, `quantity`, `seller_id`) VALUES (123, 1, 1, 2, 1);

COMMIT;

USE `project`;

DELIMITER $$

USE `project`$$
DROP TRIGGER IF EXISTS `project`.`rates_BEFORE_INSERT` $$
USE `project`$$
CREATE DEFINER = CURRENT_USER TRIGGER `project`.`rates_BEFORE_INSERT` 
BEFORE INSERT
ON `rates` FOR EACH ROW
BEGIN
declare msg varchar(255);
    if new.rate > 5 then
        set msg = concat('Error: Trying to insert an invalid rate: ', cast(new.rate as char));
        signal sqlstate '45000' set message_text = msg;
    end if;
END
$$


USE `project`$$
DROP TRIGGER IF EXISTS `project`.`rates_BEFORE_UPDATE` $$
USE `project`$$
CREATE DEFINER = CURRENT_USER TRIGGER `project`.`rates_BEFORE_UPDATE`
BEFORE UPDATE
ON `rates` FOR EACH ROW
BEGIN
	declare msg varchar(255);
    if new.rate > 5 then
		set msg = concat('Error: Trying to insert an invalid rate: ', cast(new.rate as char));
        signal sqlstate '45000' set message_text = msg;
	end if;
END
$$


DELIMITER ;
